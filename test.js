var subject = require('./subject.js')
var mock = require('mock-fs');
subject.inc('','');
subject.inc('',undefined);
subject.inc('','');
subject.inc(0,'');
subject.inc(0,undefined);
subject.inc(0,'');
subject.inc(01,'');
subject.inc(01,undefined);
subject.inc(01,'');
subject.inc(-1,'');
subject.inc(-1,undefined);
subject.inc(-1,'');
subject.weird('','','','');
subject.weird('','','',"strict");
subject.weird('','','','');
subject.weird('','','','werw');
subject.weird('','','','');
subject.weird('','','',"strict");
subject.weird('','','','');
subject.weird('','',42,'');
subject.weird('','',42,"strict");
subject.weird('','',42,'');
subject.weird('','',42,'werw');
subject.weird('','',42,'');
subject.weird('','',42,"strict");
subject.weird('','',42,'');
subject.weird('','',421,'');
subject.weird('','',421,"strict");
subject.weird('','',421,'');
subject.weird('','',421,'werw');
subject.weird('','',421,'');
subject.weird('','',421,"strict");
subject.weird('','',421,'');
subject.weird('','',41,'');
subject.weird('','',41,"strict");
subject.weird('','',41,'');
subject.weird('','',41,'werw');
subject.weird('','',41,'');
subject.weird('','',41,"strict");
subject.weird('','',41,'');
subject.weird('',0,'','');
subject.weird('',0,'',"strict");
subject.weird('',0,'','');
subject.weird('',0,'','werw');
subject.weird('',0,'','');
subject.weird('',0,'',"strict");
subject.weird('',0,'','');
subject.weird('',0,42,'');
subject.weird('',0,42,"strict");
subject.weird('',0,42,'');
subject.weird('',0,42,'werw');
subject.weird('',0,42,'');
subject.weird('',0,42,"strict");
subject.weird('',0,42,'');
subject.weird('',0,421,'');
subject.weird('',0,421,"strict");
subject.weird('',0,421,'');
subject.weird('',0,421,'werw');
subject.weird('',0,421,'');
subject.weird('',0,421,"strict");
subject.weird('',0,421,'');
subject.weird('',0,41,'');
subject.weird('',0,41,"strict");
subject.weird('',0,41,'');
subject.weird('',0,41,'werw');
subject.weird('',0,41,'');
subject.weird('',0,41,"strict");
subject.weird('',0,41,'');
subject.weird('',01,'','');
subject.weird('',01,'',"strict");
subject.weird('',01,'','');
subject.weird('',01,'','werw');
subject.weird('',01,'','');
subject.weird('',01,'',"strict");
subject.weird('',01,'','');
subject.weird('',01,42,'');
subject.weird('',01,42,"strict");
subject.weird('',01,42,'');
subject.weird('',01,42,'werw');
subject.weird('',01,42,'');
subject.weird('',01,42,"strict");
subject.weird('',01,42,'');
subject.weird('',01,421,'');
subject.weird('',01,421,"strict");
subject.weird('',01,421,'');
subject.weird('',01,421,'werw');
subject.weird('',01,421,'');
subject.weird('',01,421,"strict");
subject.weird('',01,421,'');
subject.weird('',01,41,'');
subject.weird('',01,41,"strict");
subject.weird('',01,41,'');
subject.weird('',01,41,'werw');
subject.weird('',01,41,'');
subject.weird('',01,41,"strict");
subject.weird('',01,41,'');
subject.weird('',-1,'','');
subject.weird('',-1,'',"strict");
subject.weird('',-1,'','');
subject.weird('',-1,'','werw');
subject.weird('',-1,'','');
subject.weird('',-1,'',"strict");
subject.weird('',-1,'','');
subject.weird('',-1,42,'');
subject.weird('',-1,42,"strict");
subject.weird('',-1,42,'');
subject.weird('',-1,42,'werw');
subject.weird('',-1,42,'');
subject.weird('',-1,42,"strict");
subject.weird('',-1,42,'');
subject.weird('',-1,421,'');
subject.weird('',-1,421,"strict");
subject.weird('',-1,421,'');
subject.weird('',-1,421,'werw');
subject.weird('',-1,421,'');
subject.weird('',-1,421,"strict");
subject.weird('',-1,421,'');
subject.weird('',-1,41,'');
subject.weird('',-1,41,"strict");
subject.weird('',-1,41,'');
subject.weird('',-1,41,'werw');
subject.weird('',-1,41,'');
subject.weird('',-1,41,"strict");
subject.weird('',-1,41,'');
subject.weird(7,'','','');
subject.weird(7,'','',"strict");
subject.weird(7,'','','');
subject.weird(7,'','','werw');
subject.weird(7,'','','');
subject.weird(7,'','',"strict");
subject.weird(7,'','','');
subject.weird(7,'',42,'');
subject.weird(7,'',42,"strict");
subject.weird(7,'',42,'');
subject.weird(7,'',42,'werw');
subject.weird(7,'',42,'');
subject.weird(7,'',42,"strict");
subject.weird(7,'',42,'');
subject.weird(7,'',421,'');
subject.weird(7,'',421,"strict");
subject.weird(7,'',421,'');
subject.weird(7,'',421,'werw');
subject.weird(7,'',421,'');
subject.weird(7,'',421,"strict");
subject.weird(7,'',421,'');
subject.weird(7,'',41,'');
subject.weird(7,'',41,"strict");
subject.weird(7,'',41,'');
subject.weird(7,'',41,'werw');
subject.weird(7,'',41,'');
subject.weird(7,'',41,"strict");
subject.weird(7,'',41,'');
subject.weird(7,0,'','');
subject.weird(7,0,'',"strict");
subject.weird(7,0,'','');
subject.weird(7,0,'','werw');
subject.weird(7,0,'','');
subject.weird(7,0,'',"strict");
subject.weird(7,0,'','');
subject.weird(7,0,42,'');
subject.weird(7,0,42,"strict");
subject.weird(7,0,42,'');
subject.weird(7,0,42,'werw');
subject.weird(7,0,42,'');
subject.weird(7,0,42,"strict");
subject.weird(7,0,42,'');
subject.weird(7,0,421,'');
subject.weird(7,0,421,"strict");
subject.weird(7,0,421,'');
subject.weird(7,0,421,'werw');
subject.weird(7,0,421,'');
subject.weird(7,0,421,"strict");
subject.weird(7,0,421,'');
subject.weird(7,0,41,'');
subject.weird(7,0,41,"strict");
subject.weird(7,0,41,'');
subject.weird(7,0,41,'werw');
subject.weird(7,0,41,'');
subject.weird(7,0,41,"strict");
subject.weird(7,0,41,'');
subject.weird(7,01,'','');
subject.weird(7,01,'',"strict");
subject.weird(7,01,'','');
subject.weird(7,01,'','werw');
subject.weird(7,01,'','');
subject.weird(7,01,'',"strict");
subject.weird(7,01,'','');
subject.weird(7,01,42,'');
subject.weird(7,01,42,"strict");
subject.weird(7,01,42,'');
subject.weird(7,01,42,'werw');
subject.weird(7,01,42,'');
subject.weird(7,01,42,"strict");
subject.weird(7,01,42,'');
subject.weird(7,01,421,'');
subject.weird(7,01,421,"strict");
subject.weird(7,01,421,'');
subject.weird(7,01,421,'werw');
subject.weird(7,01,421,'');
subject.weird(7,01,421,"strict");
subject.weird(7,01,421,'');
subject.weird(7,01,41,'');
subject.weird(7,01,41,"strict");
subject.weird(7,01,41,'');
subject.weird(7,01,41,'werw');
subject.weird(7,01,41,'');
subject.weird(7,01,41,"strict");
subject.weird(7,01,41,'');
subject.weird(7,-1,'','');
subject.weird(7,-1,'',"strict");
subject.weird(7,-1,'','');
subject.weird(7,-1,'','werw');
subject.weird(7,-1,'','');
subject.weird(7,-1,'',"strict");
subject.weird(7,-1,'','');
subject.weird(7,-1,42,'');
subject.weird(7,-1,42,"strict");
subject.weird(7,-1,42,'');
subject.weird(7,-1,42,'werw');
subject.weird(7,-1,42,'');
subject.weird(7,-1,42,"strict");
subject.weird(7,-1,42,'');
subject.weird(7,-1,421,'');
subject.weird(7,-1,421,"strict");
subject.weird(7,-1,421,'');
subject.weird(7,-1,421,'werw');
subject.weird(7,-1,421,'');
subject.weird(7,-1,421,"strict");
subject.weird(7,-1,421,'');
subject.weird(7,-1,41,'');
subject.weird(7,-1,41,"strict");
subject.weird(7,-1,41,'');
subject.weird(7,-1,41,'werw');
subject.weird(7,-1,41,'');
subject.weird(7,-1,41,"strict");
subject.weird(7,-1,41,'');
subject.weird(6,'','','');
subject.weird(6,'','',"strict");
subject.weird(6,'','','');
subject.weird(6,'','','werw');
subject.weird(6,'','','');
subject.weird(6,'','',"strict");
subject.weird(6,'','','');
subject.weird(6,'',42,'');
subject.weird(6,'',42,"strict");
subject.weird(6,'',42,'');
subject.weird(6,'',42,'werw');
subject.weird(6,'',42,'');
subject.weird(6,'',42,"strict");
subject.weird(6,'',42,'');
subject.weird(6,'',421,'');
subject.weird(6,'',421,"strict");
subject.weird(6,'',421,'');
subject.weird(6,'',421,'werw');
subject.weird(6,'',421,'');
subject.weird(6,'',421,"strict");
subject.weird(6,'',421,'');
subject.weird(6,'',41,'');
subject.weird(6,'',41,"strict");
subject.weird(6,'',41,'');
subject.weird(6,'',41,'werw');
subject.weird(6,'',41,'');
subject.weird(6,'',41,"strict");
subject.weird(6,'',41,'');
subject.weird(6,0,'','');
subject.weird(6,0,'',"strict");
subject.weird(6,0,'','');
subject.weird(6,0,'','werw');
subject.weird(6,0,'','');
subject.weird(6,0,'',"strict");
subject.weird(6,0,'','');
subject.weird(6,0,42,'');
subject.weird(6,0,42,"strict");
subject.weird(6,0,42,'');
subject.weird(6,0,42,'werw');
subject.weird(6,0,42,'');
subject.weird(6,0,42,"strict");
subject.weird(6,0,42,'');
subject.weird(6,0,421,'');
subject.weird(6,0,421,"strict");
subject.weird(6,0,421,'');
subject.weird(6,0,421,'werw');
subject.weird(6,0,421,'');
subject.weird(6,0,421,"strict");
subject.weird(6,0,421,'');
subject.weird(6,0,41,'');
subject.weird(6,0,41,"strict");
subject.weird(6,0,41,'');
subject.weird(6,0,41,'werw');
subject.weird(6,0,41,'');
subject.weird(6,0,41,"strict");
subject.weird(6,0,41,'');
subject.weird(6,01,'','');
subject.weird(6,01,'',"strict");
subject.weird(6,01,'','');
subject.weird(6,01,'','werw');
subject.weird(6,01,'','');
subject.weird(6,01,'',"strict");
subject.weird(6,01,'','');
subject.weird(6,01,42,'');
subject.weird(6,01,42,"strict");
subject.weird(6,01,42,'');
subject.weird(6,01,42,'werw');
subject.weird(6,01,42,'');
subject.weird(6,01,42,"strict");
subject.weird(6,01,42,'');
subject.weird(6,01,421,'');
subject.weird(6,01,421,"strict");
subject.weird(6,01,421,'');
subject.weird(6,01,421,'werw');
subject.weird(6,01,421,'');
subject.weird(6,01,421,"strict");
subject.weird(6,01,421,'');
subject.weird(6,01,41,'');
subject.weird(6,01,41,"strict");
subject.weird(6,01,41,'');
subject.weird(6,01,41,'werw');
subject.weird(6,01,41,'');
subject.weird(6,01,41,"strict");
subject.weird(6,01,41,'');
subject.weird(6,-1,'','');
subject.weird(6,-1,'',"strict");
subject.weird(6,-1,'','');
subject.weird(6,-1,'','werw');
subject.weird(6,-1,'','');
subject.weird(6,-1,'',"strict");
subject.weird(6,-1,'','');
subject.weird(6,-1,42,'');
subject.weird(6,-1,42,"strict");
subject.weird(6,-1,42,'');
subject.weird(6,-1,42,'werw');
subject.weird(6,-1,42,'');
subject.weird(6,-1,42,"strict");
subject.weird(6,-1,42,'');
subject.weird(6,-1,421,'');
subject.weird(6,-1,421,"strict");
subject.weird(6,-1,421,'');
subject.weird(6,-1,421,'werw');
subject.weird(6,-1,421,'');
subject.weird(6,-1,421,"strict");
subject.weird(6,-1,421,'');
subject.weird(6,-1,41,'');
subject.weird(6,-1,41,"strict");
subject.weird(6,-1,41,'');
subject.weird(6,-1,41,'werw');
subject.weird(6,-1,41,'');
subject.weird(6,-1,41,"strict");
subject.weird(6,-1,41,'');
subject.weird(71,'','','');
subject.weird(71,'','',"strict");
subject.weird(71,'','','');
subject.weird(71,'','','werw');
subject.weird(71,'','','');
subject.weird(71,'','',"strict");
subject.weird(71,'','','');
subject.weird(71,'',42,'');
subject.weird(71,'',42,"strict");
subject.weird(71,'',42,'');
subject.weird(71,'',42,'werw');
subject.weird(71,'',42,'');
subject.weird(71,'',42,"strict");
subject.weird(71,'',42,'');
subject.weird(71,'',421,'');
subject.weird(71,'',421,"strict");
subject.weird(71,'',421,'');
subject.weird(71,'',421,'werw');
subject.weird(71,'',421,'');
subject.weird(71,'',421,"strict");
subject.weird(71,'',421,'');
subject.weird(71,'',41,'');
subject.weird(71,'',41,"strict");
subject.weird(71,'',41,'');
subject.weird(71,'',41,'werw');
subject.weird(71,'',41,'');
subject.weird(71,'',41,"strict");
subject.weird(71,'',41,'');
subject.weird(71,0,'','');
subject.weird(71,0,'',"strict");
subject.weird(71,0,'','');
subject.weird(71,0,'','werw');
subject.weird(71,0,'','');
subject.weird(71,0,'',"strict");
subject.weird(71,0,'','');
subject.weird(71,0,42,'');
subject.weird(71,0,42,"strict");
subject.weird(71,0,42,'');
subject.weird(71,0,42,'werw');
subject.weird(71,0,42,'');
subject.weird(71,0,42,"strict");
subject.weird(71,0,42,'');
subject.weird(71,0,421,'');
subject.weird(71,0,421,"strict");
subject.weird(71,0,421,'');
subject.weird(71,0,421,'werw');
subject.weird(71,0,421,'');
subject.weird(71,0,421,"strict");
subject.weird(71,0,421,'');
subject.weird(71,0,41,'');
subject.weird(71,0,41,"strict");
subject.weird(71,0,41,'');
subject.weird(71,0,41,'werw');
subject.weird(71,0,41,'');
subject.weird(71,0,41,"strict");
subject.weird(71,0,41,'');
subject.weird(71,01,'','');
subject.weird(71,01,'',"strict");
subject.weird(71,01,'','');
subject.weird(71,01,'','werw');
subject.weird(71,01,'','');
subject.weird(71,01,'',"strict");
subject.weird(71,01,'','');
subject.weird(71,01,42,'');
subject.weird(71,01,42,"strict");
subject.weird(71,01,42,'');
subject.weird(71,01,42,'werw');
subject.weird(71,01,42,'');
subject.weird(71,01,42,"strict");
subject.weird(71,01,42,'');
subject.weird(71,01,421,'');
subject.weird(71,01,421,"strict");
subject.weird(71,01,421,'');
subject.weird(71,01,421,'werw');
subject.weird(71,01,421,'');
subject.weird(71,01,421,"strict");
subject.weird(71,01,421,'');
subject.weird(71,01,41,'');
subject.weird(71,01,41,"strict");
subject.weird(71,01,41,'');
subject.weird(71,01,41,'werw');
subject.weird(71,01,41,'');
subject.weird(71,01,41,"strict");
subject.weird(71,01,41,'');
subject.weird(71,-1,'','');
subject.weird(71,-1,'',"strict");
subject.weird(71,-1,'','');
subject.weird(71,-1,'','werw');
subject.weird(71,-1,'','');
subject.weird(71,-1,'',"strict");
subject.weird(71,-1,'','');
subject.weird(71,-1,42,'');
subject.weird(71,-1,42,"strict");
subject.weird(71,-1,42,'');
subject.weird(71,-1,42,'werw');
subject.weird(71,-1,42,'');
subject.weird(71,-1,42,"strict");
subject.weird(71,-1,42,'');
subject.weird(71,-1,421,'');
subject.weird(71,-1,421,"strict");
subject.weird(71,-1,421,'');
subject.weird(71,-1,421,'werw');
subject.weird(71,-1,421,'');
subject.weird(71,-1,421,"strict");
subject.weird(71,-1,421,'');
subject.weird(71,-1,41,'');
subject.weird(71,-1,41,"strict");
subject.weird(71,-1,41,'');
subject.weird(71,-1,41,'werw');
subject.weird(71,-1,41,'');
subject.weird(71,-1,41,"strict");
subject.weird(71,-1,41,'');
subject.fileTest('','');
subject.fileTest('','path/fileExists');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('','path/fileExists');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('','path/fileExists');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('','path/fileExists');
mock.restore();
mock({});
	subject.fileTest('','path/fileExists');
mock.restore();
subject.fileTest('','pathContent/file1');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('','pathContent/file1');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('','pathContent/file1');
mock.restore();
subject.fileTest('','pathContent/file1');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('','pathContent/file1');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('','pathContent/file1');
mock.restore();
subject.fileTest('','pathContent2/file2');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('','pathContent2/file2');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('','pathContent2/file2');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('','pathContent2/file2');
mock.restore();
mock({});
	subject.fileTest('','pathContent2/file2');
mock.restore();
subject.fileTest('path/fileExists','');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('path/fileExists','');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('path/fileExists','');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('path/fileExists','');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','');
mock.restore();
subject.fileTest('path/fileExists','path/fileExists');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('path/fileExists','path/fileExists');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('path/fileExists','path/fileExists');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('path/fileExists','path/fileExists');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','path/fileExists');
mock.restore();
subject.fileTest('path/fileExists','pathContent/file1');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
subject.fileTest('path/fileExists','pathContent/file1');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent/file1');
mock.restore();
subject.fileTest('path/fileExists','pathContent2/file2');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('path/fileExists','pathContent2/file2');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('path/fileExists','pathContent2/file2');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('path/fileExists','pathContent2/file2');
mock.restore();
mock({});
	subject.fileTest('path/fileExists','pathContent2/file2');
mock.restore();
subject.fileTest('pathContent/file1','');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('pathContent/file1','');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('pathContent/file1','');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('pathContent/file1','');
mock.restore();
mock({});
	subject.fileTest('pathContent/file1','');
mock.restore();
subject.fileTest('pathContent/file1','path/fileExists');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('pathContent/file1','path/fileExists');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('pathContent/file1','path/fileExists');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('pathContent/file1','path/fileExists');
mock.restore();
mock({});
	subject.fileTest('pathContent/file1','path/fileExists');
mock.restore();
subject.fileTest('pathContent/file1','pathContent/file1');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('pathContent/file1','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('pathContent/file1','pathContent/file1');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('pathContent/file1','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('pathContent/file1','pathContent/file1');
mock.restore();
subject.fileTest('pathContent/file1','pathContent/file1');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('pathContent/file1','pathContent/file1');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('pathContent/file1','pathContent/file1');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('pathContent/file1','pathContent/file1');
mock.restore();
mock({});
	subject.fileTest('pathContent/file1','pathContent/file1');
mock.restore();
subject.fileTest('pathContent/file1','pathContent2/file2');
mock({"path/fileExists":{},"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('pathContent/file1','pathContent2/file2');
mock.restore();
mock({"pathContent":{"file1":"text content"},"pathContent2":{"file2":""}});
	subject.fileTest('pathContent/file1','pathContent2/file2');
mock.restore();
mock({"path/fileExists":{}});
	subject.fileTest('pathContent/file1','pathContent2/file2');
mock.restore();
mock({});
	subject.fileTest('pathContent/file1','pathContent2/file2');
mock.restore();
subject.normalize('');
subject.format('','','');
subject.blackListNumber('');
